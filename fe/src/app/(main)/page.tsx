/**
 * @component Home
 * @description Trang ch·ªß c·ªßa ·ª©ng d·ª•ng Food Delivery, hi·ªÉn th·ªã c√°c ph·∫ßn ch√≠nh c·ªßa giao di·ªán ng∆∞·ªùi d√πng.
 */

"use client";

import { useState } from "react";

import CategorySection from "./_components/ui/category";
import FoodGrid from "./_components/ui/food-grid";
import HeroSection from "./_components/ui/hero-section";
import PromotionSection from "./_components/ui/promotion";
import FoodRow from "./_components/ui/food-row";
import { FoodPreview, Category, Restaurant } from "@/interface";
import RestaurantCard from "./_components/restaurant-card";

// D·ªØ li·ªáu m·∫´u cho danh m·ª•c m√≥n ƒÉn
const foodCategories: Category[] = [
  { id: "1", name: "Burgers", icon: "üçî" },
  { id: "2", name: "Pizza", icon: "üçï" },
  { id: "3", name: "Sushi", icon: "üç£" },
  { id: "4", name: "Pasta", icon: "üçù" },
  { id: "5", name: "M√≥n tr√°ng mi·ªáng", icon: "üç∞" },
  { id: "6", name: "ƒê·ªì u·ªëng", icon: "ü•§" },
];
// Sample data for restaurants and their food items
const sampleRestaurants: Restaurant[] = [
  {
    id: "hub-1",
    name: "Burger Hub",
    description: "N∆°i ph·ª•c v·ª• burger ngon nh·∫•t th√†nh ph·ªë.",
    distance: "1.5 km",
    deliveryTime: "15-25",
  },
  {
    id: "palace-1",
    name: "Pizza Palace",
    description: "Pizza truy·ªÅn th·ªëng v·ªõi h∆∞∆°ng v·ªã tuy·ªát v·ªùi.",
    distance: "2.0 km",
    deliveryTime: "20-35",
  },
  {
    id: "sushi-1",
    name: "Sushi Master",
    description: "Sushi t∆∞∆°i ngon, ƒë∆∞·ª£c l√†m t·ª´ nguy√™n li·ªáu ch·∫•t l∆∞·ª£ng.",
    distance: "1.8 km",
    deliveryTime: "25-40",
  },
];

// Sample food items for each restaurant
const sampleFoodItems: FoodPreview[] = [
  {
    id: "1",
    name: "Hamburger Ph√¥ Mai C·ªï ƒêi·ªÉn",
    description: "B√°nh burger b√≤ v·ªõi ph√¥ mai cheddar.",
    price: 89000,
    image: "https://source.unsplash.com/random/300x200/?cheeseburger",
    category: { id: "1", name: "Burgers" },
    rating: 4.8,
    popular: true,
    restaurant: { id: "hub-1", name: "Burger Hub", deliveryTime: "15-25" },
    status: "available"
  },
  {
    id: "2",
    name: "Pizza Margherita",
    description: "Pizza truy·ªÅn th·ªëng v·ªõi s·ªët c√† chua v√† ph√¥ mai mozzarella.",
    price: 120000,
    image: "https://source.unsplash.com/random/300x200/?pizza",
    category: { id: "2", name: "Pizza" },
    rating: 4.5,
    popular: true,
    restaurant: { id: "palace-1", name: "Pizza Palace", deliveryTime: "20-35" },
    status: "available"
  },
  {
    id: "3",
    name: "Combo Sushi",
    description: "H·ªón h·ª£p nigiri v√† cu·ªôn maki t∆∞∆°i.",
    price: 180000,
    image: "https://source.unsplash.com/random/300x200/?sushi",
    category: { id: "3", name: "Sushi" },
    rating: 4.9,
    popular: true,
    restaurant: { id: "sushi-1", name: "Sushi Master", deliveryTime: "25-40" },
    status: "available"
  },
];
// Convert sample foods to use the FoodPreview interface
const sampleFoods: FoodPreview[] = [
  {
    id: "1",
    name: "Hamburger Ph√¥ Mai C·ªï ƒêi·ªÉn",
    description: "B√°nh burger b√≤ v·ªõi ph√¥ mai cheddar, rau x√† l√°ch, c√† chua v√† s·ªët ƒë·∫∑c bi·ªát",
    price: 89000,
    image: "https://source.unsplash.com/random/300x200/?cheeseburger",
    category: { id: "1", name: "Burgers" },
    rating: 4.8,
    popular: true,
    restaurant: {
      id: "hub-1",
      name: "Burger Hub",
      deliveryTime: "15-25"
    },
    status: "available"
  },
  {
    id: "2",
    name: "Pizza Margherita",
    description: "Pizza truy·ªÅn th·ªëng v·ªõi s·ªët c√† chua, ph√¥ mai mozzarella v√† l√° h√∫ng qu·∫ø",
    price: 120000,
    image: "https://source.unsplash.com/random/300x200/?pizza",
    category: { id: "2", name: "Pizza" },
    rating: 4.5,
    popular: true,
    restaurant: {
      id: "palace-1",
      name: "Pizza Palace",
      deliveryTime: "20-35"
    },
    status: "available"
  },
  {
    id: "3",
    name: "Combo Sushi",
    description: "H·ªón h·ª£p nigiri v√† cu·ªôn maki t∆∞∆°i v·ªõi wasabi v√† n∆∞·ªõc t∆∞∆°ng",
    price: 180000,
    image: "https://source.unsplash.com/random/300x200/?sushi",
    category: { id: "3", name: "Sushi" },
    rating: 4.9,
    popular: true,
    restaurant: {
      id: "sushi-1",
      name: "Sushi Master",
      deliveryTime: "25-40"
    },
    status: "available"
  },
  {
    id: "4",
    name: "M√¨ √ù Carbonara",
    description: "M√¨ √ù c·ªï ƒëi·ªÉn v·ªõi tr·ª©ng, ph√¥ mai, th·ªãt x√¥ng kh√≥i v√† ti√™u ƒëen",
    price: 110000,
    image: "https://source.unsplash.com/random/300x200/?pasta",
    category: { id: "4", name: "Pasta" },
    rating: 4.7,
    popular: false,
    restaurant: {
      id: "pasta-1",
      name: "Pasta Perfecto",
      deliveryTime: "20-30"
    },
    status: "available"
  },
  {
    id: "5",
    name: "Tiramisu",
    description: "M√≥n tr√°ng mi·ªáng √ù v·ªõi b√°nh quy t·∫©m c√† ph√™ v√† kem mascarpone",
    price: 65000,
    image: "https://source.unsplash.com/random/300x200/?tiramisu",
    category: { id: "5", name: "Dessert" },
    rating: 4.6,
    popular: true,
    restaurant: {
      id: "sweet-1",
      name: "Sweet Treats",
      deliveryTime: "15-25"
    },
    status: "available"
  },
  {
    id: "6",
    name: "Tr√† S·ªØa Tr√¢n Ch√¢u",
    description: "Tr√† s·ªØa v·ªõi tr√¢n ch√¢u v√† si-r√¥ ƒë∆∞·ªùng n√¢u",
    price: 45000,
    image: "https://source.unsplash.com/random/300x200/?bubbletea",
    category: { id: "6", name: "Drinks" },
    rating: 4.4,
    popular: false,
    restaurant: {
      id: "bubble-1",
      name: "Bubble Tea House",
      deliveryTime: "10-20"
    },
    status: "available"
  },
];

// D·ªØ li·ªáu m·∫´u cho nh√† h√†ng g·∫ßn ƒë√¢y
const sampleNearbyFoods: FoodPreview[] = [
  {
    id: "101",
    name: "B√°nh M√¨ Th·ªãt",
    description: "B√°nh m√¨ Vi·ªát Nam v·ªõi th·ªãt heo n∆∞·ªõng, rau c·ªß ng√¢m chua v√† rau th∆°m",
    price: 35000,
    image: "https://source.unsplash.com/random/300x200/?banhmi",
    category: { id: "7", name: "Vietnamese" },
    rating: 4.7,
    popular: true,
    restaurant: {
      id: "banhmi-1",
      name: "B√°nh M√¨ Express",
      deliveryTime: "10-20",
      distance: "0.5 km"
    },
    status: "available"
  },
  {
    id: "102",
    name: "Ph·ªü B√≤",
    description: "S√∫p ph·ªü b√≤ truy·ªÅn th·ªëng v·ªõi rau th∆°m v√† gi√° ƒë·ªó",
    price: 65000,
    image: "https://source.unsplash.com/random/300x200/?pho",
    category: { id: "7", name: "Vietnamese" },
    rating: 4.9,
    popular: true,
    restaurant: {
      id: "pho-1",
      name: "Ph·ªü House",
      deliveryTime: "15-25",
      distance: "0.7 km"
    },
    status: "available"
  },
  {
    id: "103",
    name: "B√∫n Ch·∫£",
    description: "Th·ªãt l·ª£n n∆∞·ªõng v·ªõi b√∫n, rau th∆°m v√† n∆∞·ªõc ch·∫•m",
    price: 70000,
    image: "https://source.unsplash.com/random/300x200/?buncha",
    category: { id: "7", name: "Vietnamese" },
    rating: 4.8,
    popular: false,
    restaurant: {
      id: "hanoi-1",
      name: "Hanoi Kitchen",
      deliveryTime: "20-30",
      distance: "1.2 km"
    },
    status: "available"
  },
  {
    id: "104",
    name: "C∆°m T·∫•m",
    description: "C∆°m t·∫•m v·ªõi th·ªãt heo n∆∞·ªõng, tr·ª©ng v√† n∆∞·ªõc m·∫Øm",
    price: 55000,
    image: "https://source.unsplash.com/random/300x200/?brokemrice",
    category: { id: "7", name: "Vietnamese" },
    rating: 4.6,
    popular: true,
    restaurant: {
      id: "saigon-1",
      name: "Saigon Corner",
      deliveryTime: "15-25",
      distance: "1.5 km"
    },
    status: "available"
  },
];

// D·ªØ li·ªáu m·∫´u cho m√≥n ƒÉn b√°n ch·∫°y
const sampleTopSellingFoods: FoodPreview[] = [
  {
    id: "201",
    name: "Burger G√† Cay",
    description: "Th·ªãt g√† gi√≤n v·ªõi s·ªët cay v√† d∆∞a chua",
    price: 95000,
    image: "https://source.unsplash.com/random/300x200/?chickenburger",
    category: { id: "1", name: "Burgers" },
    rating: 4.9,
    popular: true,
    restaurant: {
      id: "burger-2",
      name: "Burger Joint",
      deliveryTime: "15-25"
    },
    purchasedNumber: 1250,
    status: "available"
  },
  {
    id: "202",
    name: "Pizza Pepperoni",
    description: "Pizza pepperoni c·ªï ƒëi·ªÉn v·ªõi ph√¥ mai th√™m",
    price: 135000,
    image: "https://source.unsplash.com/random/300x200/?pepperonipizza",
    category: { id: "2", name: "Pizza" },
    rating: 4.8,
    popular: true,
    restaurant: {
      id: "pizza-2",
      name: "Pizza Hub",
      deliveryTime: "20-35"
    },
    purchasedNumber: 980,
    status: "available"
  },
  {
    id: "203",
    name: "Pad Th√°i",
    description: "M√¨ x√†o v·ªõi t√¥m, ƒë·∫≠u h≈© v√† ƒë·∫≠u ph·ªông",
    price: 90000,
    image: "https://source.unsplash.com/random/300x200/?padthai",
    category: { id: "8", name: "Thai" },
    rating: 4.7,
    popular: true,
    restaurant: {
      id: "thai-1",
      name: "Thai Bistro",
      deliveryTime: "25-40"
    },
    purchasedNumber: 870,
    status: "available"
  },
  {
    id: "204",
    name: "Tacos B√≤",
    description: "B√°nh tortilla ng√¥ v·ªõi th·ªãt b√≤, salsa v√† guacamole",
    price: 75000,
    image: "https://source.unsplash.com/random/300x200/?tacos",
    category: { id: "9", name: "Mexican" },
    rating: 4.6,
    popular: true,
    restaurant: {
      id: "taco-1",
      name: "Taco House",
      deliveryTime: "15-30"
    },
    purchasedNumber: 750,
    status: "available"
  },
];


const promotions = [
  {
    id: 1,
    title: "Mi·ªÖn Ph√≠ Giao H√†ng",
    description: "Cho ƒë∆°n h√†ng tr√™n 150k",
    image: "https://source.unsplash.com/random/600x300/?delivery",
    code: "FREEDEL",
  },
  {
    id: 2,
    title: "Gi·∫£m 50% ƒê∆°n H√†ng ƒê·∫ßu Ti√™n",
    description: "Ng∆∞·ªùi d√πng m·ªõi ƒë∆∞·ª£c gi·∫£m 50%",
    image: "https://source.unsplash.com/random/600x300/?discount",
    code: "WELCOME50",
  },
];

export default function Home() {
  const [foods] = useState<FoodPreview[]>(sampleFoods);
  const [activeCategory, setActiveCategory] = useState("All");
  const [searchQuery, setSearchQuery] = useState("");

  // Filter by category - updated to handle the new category object structure
  const filteredFoods = activeCategory === "All"
    ? foods
    : foods.filter(food => food.category?.name === activeCategory);

  const getFoodsByRestaurantId = (restaurantId: string) => {
    return sampleFoodItems.filter(food => food.restaurant.id === restaurantId);
  };
  // Filter by search query
  const searchedFoods = searchQuery
    ? filteredFoods.filter(food =>
      food.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
      food.description.toLowerCase().includes(searchQuery.toLowerCase())
    )
    : filteredFoods;

  // Format price to VND
  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(price);
  };

  return (
    <>
      <HeroSection
        searchQuery={searchQuery}
        setSearchQuery={setSearchQuery}
      />

      <div className="container mx-auto px-4 py-10">

        <PromotionSection promotions={promotions} />

        <h1 className="text-2xl font-bold mb-6">Restaurants</h1>
        <div className="container mx-auto px-4 py-8">
          <RestaurantCard
            restaurants={sampleRestaurants}
            getFoods={getFoodsByRestaurantId}
          />
        </div>
        <FoodRow
          foods={sampleTopSellingFoods}
          formatPrice={formatPrice}
          name="N·ªïi ti·∫øng"
          viewAllLink="/foods"
        />

        <FoodRow
          foods={sampleNearbyFoods}
          formatPrice={formatPrice}
          name="G·∫ßn ƒë√¢y"
          viewAllLink="/foods"
        />

        <CategorySection
          categories={foodCategories}
          activeCategory={activeCategory}
          setActiveCategory={setActiveCategory}
        />

        <FoodGrid
          name={activeCategory === "All" ? "T·∫•t c·∫£ m√≥n ƒÉn" : activeCategory}
          foods={searchedFoods}
          formatPrice={formatPrice}
        />
      </div>
    </>
  );
}
